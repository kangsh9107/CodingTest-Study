import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.LinkedList;
import java.util.Queue;
public class Main {
	public static boolean[] isPrime = new boolean[10001];
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		Queue<Integer> temp = new LinkedList<>();

		createFunc();

		int test = Integer.parseInt(br.readLine());

		for(int i=0; i<test; i++) {
			temp.offer( Integer.parseInt(br.readLine()) );
		}


		int n = temp.poll();

		for(int i=n/2; i<10001; i++) {
			if(isPrime[i] && isPrime[n-i]) {
				bw.write(String.valueOf(Math.min(i, n-i) + " " + Math.max(i, n-i) + "\n"));
				if(temp.isEmpty()) break;
				n = temp.poll();
				i = (n/2) - 1;
			}
		}

		bw.flush();
		bw.close();
	}

	public static void createFunc() {
		for(int i=2; i<10001; i++) {
			isPrime[i] = true;
		}

		isPrime[0] = false;
		isPrime[1] = false;

		for(int i=2; i*i<=10000; i++) {
			if(i != 4) {
				for(int j=2; i*j<=10000; j++) {
					isPrime[i*j] = false;
				}
			}
		}
	}
}